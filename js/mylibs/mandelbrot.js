// Generated by CoffeeScript 1.3.1
(function() {
  var Mandelbrot, canvasElement, colors, core, mandelbrot;

  Mandelbrot = (function() {
    var setCanvasSize;

    function Mandelbrot(mandelbrotCore, mandelbrotColors, canvasElement) {
      var context;
      this.mandelbrotCore = mandelbrotCore;
      this.mandelbrotColors = mandelbrotColors;
      if (this.mandelbrotCore == null) {
        throw "mandelbrotCore is required";
      }
      if (this.mandelbrotColors == null) {
        throw "mandelbrotColors is required";
      }
      this.box = {
        top: 1,
        left: -2,
        bottom: -1,
        right: 1
      };
      if (window.Modernizr.webworkers && window.JSON) {
        this.worker = new window.Worker('../../js/mylibs/mandelbrot-worker.js');
      } else {

      }
      context = canvasElement.getContext('2d');
      if (context == null) {
        throw 'Could not build 2d canvas context in canvas';
      }
      setCanvasSize(canvasElement, context);
      $(window).resize(function() {
        var resizeTimer;
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout((function() {
          return setCanvasSize(canvasElement, context);
        }), 100);
        return 0;
      });
    }

    setCanvasSize = function(canvasElement, context) {
      var width;
      width = $(canvasElement).parent().width();
      context.canvas.width = width;
      context.canvas.height = width * 2 / 3.0;
      return 0;
    };

    return Mandelbrot;

  })();

  core = new window.MandelbrotCore();

  colors = new window.MandelbrotColors();

  canvasElement = document.getElementById('mandlebrot');

  mandelbrot = new Mandelbrot(canvasElement);

}).call(this);
